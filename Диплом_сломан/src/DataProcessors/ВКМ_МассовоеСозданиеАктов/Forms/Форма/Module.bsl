#Область ОбработчикиСобытийЭлементовШапкиФормы
&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	Объект.СписокДоговоров.Очистить();
	Индикатор = 0;
	СтрокаСостояния = "";
	
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьРеализации(Команда)
	
	Объект.СписокДоговоров.Очистить();
	//заполняем ПараметрыЗапуска  для структуры фонового задания, 
	//задаем вывод ПрогрессаВыполнения с интервалом на форму длительной операции. 
	//"активируем" фоновое задание и "отслеживаем его" с помощью ДлительныеОперацииКлиент.ОжидатьЗавершение().
	ИдЗадания = "";
	Индикатор = 0;
	СтрокаСостояния = "";
	
	ПараметрыЗапуска = Новый Структура();
	ПараметрыЗапуска.Вставить("НачалоПериода", Объект.Период.ДатаНачала);
	ПараметрыЗапуска.Вставить("КонецПериода",Объект.Период.ДатаОкончания);
	
	СтруктураФоновогоЗадания = ВыполнитьФоновоеЗаданиеНаСервере (ПараметрыЗапуска, УникальныйИдентификатор);
	ИдЗадания = СтруктураФоновогоЗадания.ИдентификаторЗадания;
//	готовим параметры ожидания, как именно будем ждать нашу форму
//	сделаем коллекцию параметры ожиданич, передаем туда нашу форму
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	
//	выведем прогресс
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Истина;
	ПараметрыОжидания.Интервал = 2;
	
//	ждем, создаем описание оповещения, указываем, чтометод находится в нашей форме
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ОповещениеОЗавершении", ЭтотОбъект);
	
//	Начинаем ждать завершения, передаем что именно ждем (операция),
//	куда должны попасть при проверке (оповещение о завершении, и как именно ждем (параметры ожидания)
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(СтруктураФоновогоЗадания,ОповещениеОЗавершении,ПараметрыОжидания);
КонецПроцедуры 
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
//реализуем метод Оповещение о завершении на форме, вызывается при завершении фонового задания
//он экспортный, клиентский, 
//получает 2 параметра Результат и доп.параметры

&НаКлиенте
Процедура ОповещениеОЗавершении(Результат, ДополнительныеПараметры) Экспорт
	
	//ОтключитьОбработчикОжидания("ОбработчикОжиданияИндикатор");
	//результат - коллекция, в которой указан адрес и статус (выполняется, отменено или выполнено)
	Если Результат = Неопределено Тогда
		Возврат;
	ИначеЕсли Результат.Статус = "Ошибка" Тогда
		 ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Результат.ПодробноеПредставлениеОшибки);
		 СтрокаСостояния = "Ошибка";
	ИначеЕсли Результат.Статус = "Выполнено" Тогда
		Индикатор = 100;
		СтрокаСостояния = "Выполнено";
		ЗанестиВТЧ (ПолучитьИзВременногоХранилища(Результат.АдресРезультата));
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ВыполнитьФоновоеЗаданиеНаСервере (ПараметрыЗапуска, УникальныйИдентификатор)
	
	НаименованиеЗадания = "Создать акты для договоров с абонентским обслуживанием";
	
	ВыполняемыйМетод = "ВКМ_ДлительныйМодуль.СоздатьРеализации";
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НаименованиеЗадания;
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	
	//гоовим длительную операцию, передаем уникальный идентификатор формы, чтобы БСП знала куда оповещать
	//имя функции в виде строки где лежит код (в обработках в модуле менеджера)
	СтруктураФоновогоЗадания  = ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, ВыполняемыйМетод, ПараметрыЗапуска.НачалоПериода, ПараметрыЗапуска.КонецПериода);
	
	Возврат СтруктураФоновогоЗадания;
		
КонецФункции

&НаКлиенте 
Процедура ОбработчикОжиданияИндикатор() 
	
	Прогресс = ПрочитатьПрогресс(ИдЗадания);
	Если НЕ ТипЗнч(Прогресс) = Тип("Структура") Тогда
		СтрокаСостояния = "";
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Прогресс) = Тип("Структура") 
		И Прогресс.Свойство("ЗавершеноАварийно") Тогда
		ОтключитьОбработчикОжидания("ОбработчикОжиданияИндикатор");
		Возврат;
	КонецЕсли;
	
	Если Прогресс.Свойство("ЗаданиеВыполнено") И Прогресс.ЗаданиеВыполнено Тогда
		Индикатор = 100;
		СтрокаСостояния = "Задание завершено.";
	Иначе
		Если Прогресс.Свойство("Процент") Тогда
			Индикатор = Прогресс.Процент;
			
		КонецЕсли;
		
		Если Прогресс.Свойство("Текст") Тогда
			СтрокаСостояния = Прогресс.Текст;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ПрочитатьПрогресс(Знач ИдентификаторФоновогоЗадания)
	
	Задание = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(ИдентификаторФоновогоЗадания);
	
	Если Задание = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если Задание.Состояние = СостояниеФоновогоЗадания.ЗавершеноАварийно Тогда
		СтруктураОтвета = Новый Структура;
		СтруктураОтвета.Вставить("ЗавершеноАварийно", Истина);
		Возврат СтруктураОтвета;
	КонецЕсли;
	
	// используем БСП
	ПрогрессЗадания = ДлительныеОперации.ПрочитатьПрогресс(ИдентификаторФоновогоЗадания);
	
	Если ПрогрессЗадания = Неопределено
	 Или ТипЗнч(ПрогрессЗадания) <> Тип("Структура") Тогда 
		ПрогрессЗадания = Новый Структура;
	КонецЕсли;
	ПрогрессЗадания.Вставить("ЗаданиеВыполнено", ДлительныеОперации.ЗаданиеВыполнено(ИдентификаторФоновогоЗадания));
	
	Возврат ПрогрессЗадания;
	
КонецФункции

&НаКлиенте 
Процедура ЗанестиВТЧ(Результат) 
	
	Для Каждого ДанныеСтроки из Результат Цикл
	
		НоваяСтрокаТЧ = Объект.СписокДоговоров.Добавить();
		НоваяСтрокаТЧ.Договор = ДанныеСтроки.Договор;
		НоваяСтрокаТЧ.Реализация = ДанныеСтроки.Реализация;
		
	
	КонецЦикла;

КонецПроцедуры
#КонецОбласти
