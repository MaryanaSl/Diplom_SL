#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	СформироватьДвижения();

	СформироватьУдержания();
	
	РассчитатьОклад(); 
	
	РассчитатьОпускные();
	
	РассчитатьПремию (Отказ);

	ВКМ_РасчетныйМодуль.РассчитатьНДФЛ(Ссылка);
	
	ВКМ_РасчетныйМодуль.СформироватьДвиженияВзаиморасчетыССотрудниками (Ссылка);

КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СформироватьДвижения()
	
	Для каждого Строка из ОсновныеНачисления Цикл  
		
		//переносим данные по основным начислениям из ТЧ в регистр

			Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
			Движение.ПериодРегистрации = Дата;
			Движение.ВидРасчета = Строка.ВидРасчета; 
			Движение.ПериодДействияНачало = Строка.ДатаНачала;
			Движение.ПериодДействияКонец = Строка.ДатаОкончания;
			Движение.Сотрудник = Строка.Сотрудник;
			Движение.Подразделение = Строка.Подразделение; 
			Движение.ГрафикРаботы = Строка.ГрафикРаботы;
			
			Если Строка.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск Тогда
				
				Движение.БазовыйПериодНачало = НачалоМесяца(ДобавитьМесяц(Строка.ДатаНачала, -12)); 
				Движение.БазовыйПериодКонец = КонецМесяца(ДобавитьМесяц(Строка.ДатаОкончания, -1)); 
				Движение.Дней = День (Строка.ДатаОкончания) - День (Строка.ДатаНачала) + 1;  //сколько фактически дней чел был в отпуске   
				
			КонецЕсли;
		
	КонецЦикла; 

	Для каждого Строка из ДополнительныеНачисления Цикл  
		
		//переносим данные по доп.начислениям из ТЧ в регистр
			Движение = Движения.ВКМ_ДополнительныеНачисления.Добавить();
			Движение.ПериодРегистрации = Дата;
			Движение.ВидРасчета = Строка.ВидРасчета;
			Движение.Сотрудник = Строка.Сотрудник;
			Движение.Подразделение = Строка.Подразделение; 
		
	КонецЦикла; 
	
	Движения.ВКМ_ОсновныеНачисления.Записать();
	Движения.ВКМ_ДополнительныеНачисления.Записать();
	
КонецПроцедуры  

Процедура СформироватьУдержания()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВКМ_НачислениеЗарплатыОсновныеНачисления.Сотрудник КАК Сотрудник,
	|	ВКМ_НачислениеЗарплатыОсновныеНачисления.Подразделение КАК Подразделение
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	Документ.ВКМ_НачислениеЗарплаты.ОсновныеНачисления КАК ВКМ_НачислениеЗарплатыОсновныеНачисления
	|ГДЕ
	|	ВКМ_НачислениеЗарплатыОсновныеНачисления.Ссылка = &Ссылка
	|СГРУППИРОВАТЬ ПО
	|	ВКМ_НачислениеЗарплатыОсновныеНачисления.Сотрудник,
	|	ВКМ_НачислениеЗарплатыОсновныеНачисления.Подразделение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВКМ_НачислениеЗарплатыДополнительныеНачисления.Сотрудник,
	|	ВКМ_НачислениеЗарплатыДополнительныеНачисления.Подразделение
	|ИЗ
	|	Документ.ВКМ_НачислениеЗарплаты.ДополнительныеНачисления КАК ВКМ_НачислениеЗарплатыДополнительныеНачисления
	|ГДЕ
	|	ВКМ_НачислениеЗарплатыДополнительныеНачисления.Ссылка = &Ссылка
	|СГРУППИРОВАТЬ ПО
	|	ВКМ_НачислениеЗарплатыДополнительныеНачисления.Подразделение,
	|	ВКМ_НачислениеЗарплатыДополнительныеНачисления.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ.Подразделение КАК Подразделение,
	|	ВТ.Сотрудник КАК Сотрудник
	|ИЗ
	|	ВТ КАК ВТ
	|СГРУППИРОВАТЬ ПО
	|	ВТ.Подразделение,
	|	ВТ.Сотрудник";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
			Движение = Движения.ВКМ_Удержания.Добавить();
			Движение.ПериодРегистрации = Дата;
			Движение.БазовыйПериодНачало = НачалоМесяца(Дата);
			Движение.БазовыйПериодКонец = КонецМесяца(Дата);
			Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.НДФЛ;
			Движение.Подразделение = ВыборкаДетальныеЗаписи.Подразделение;
			Движение.Сотрудник = ВыборкаДетальныеЗаписи.Сотрудник;

	КонецЦикла;

	Движения.ВКМ_Удержания.Записать();
	
КонецПроцедуры  

Процедура РассчитатьОклад()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки,
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия КАК ФактическиОтработаноДней,
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеПериодДействия КАК КоличествоРабочихДнейВПериоде,
		|	ЕСТЬNULL(ВКМ_УсловияОплатыСотрудниковСрезПоследних.Оклад, 0) КАК Оклад
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(ВидРасчета = &Оклад
		|	И Регистратор = &Ссылка) КАК ВКМ_ОсновныеНачисленияДанныеГрафика
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&Дата, (Подразделение, Сотрудник) В
		|			(ВЫБРАТЬ
		|				ВКМ_ОсновныеНачисления.Подразделение,
		|				ВКМ_ОсновныеНачисления.Сотрудник
		|			ИЗ
		|				РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
		|			ГДЕ
		|				ВКМ_ОсновныеНачисления.Регистратор = &Ссылка
		|				И ВКМ_ОсновныеНачисления.ВидРасчета = &Оклад)) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
		|		ПО ВКМ_УсловияОплатыСотрудниковСрезПоследних.Подразделение = ВКМ_ОсновныеНачисленияДанныеГрафика.Подразделение
		|		И ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник = ВКМ_ОсновныеНачисленияДанныеГрафика.Сотрудник";
	
	Запрос.УстановитьПараметр("Оклад", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Движение = Движения.ВКМ_ОсновныеНачисления[ВыборкаДетальныеЗаписи.НомерСтроки - 1]; 
		
		Движение.Показатель = ВыборкаДетальныеЗаписи.Оклад;
		Движение.Дней = ВыборкаДетальныеЗаписи.ФактическиОтработаноДней;
		Движение.Результат = Движение.Показатель * ВыборкаДетальныеЗаписи.ФактическиОтработаноДней / ВыборкаДетальныеЗаписи.КоличествоРабочихДнейВПериоде; 

	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);
КонецПроцедуры  


Процедура РассчитатьОпускные()
	
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_ОсновныеНачисления.НомерСтроки,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.РезультатБаза, 0) КАК БазаОсн,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ДнейБаза, 0) КАК ОтработаноДней,
		|	ЕСТЬNULL(ВКМ_ДополнительныеНачисленияБазаВКМ_ДополнительныеНачисления.РезультатБаза, 0) КАК БазаДоп
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ОсновныеНачисления(&Измерения, &Измерения,,
		|			Регистратор = &Ссылка
		|		И ВидРасчета = &Отпуск) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления
		|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ДополнительныеНачисления.БазаВКМ_ДополнительныеНачисления(&Измерения,
		|			&Измерения,, Регистратор = &Ссылка
		|		И ВидРасчета = &Отпуск) КАК ВКМ_ДополнительныеНачисленияБазаВКМ_ДополнительныеНачисления
		|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.НомерСтроки
		|ГДЕ
		|	ВКМ_ОсновныеНачисления.Регистратор = &Ссылка
		|	И ВКМ_ОсновныеНачисления.ВидРасчета = &Отпуск";
	

	Запрос.УстановитьПараметр("Отпуск", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Измерения = Новый Массив;
	Измерения.Добавить("Подразделение");
	Измерения.Добавить("Сотрудник");
	
	Запрос.УстановитьПараметр("Измерения", Измерения);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Движение = Движения.ВКМ_ОсновныеНачисления[ВыборкаДетальныеЗаписи.НомерСтроки - 1];
		
		Если ВыборкаДетальныеЗаписи.ОтработаноДней = 0 Тогда
			Движение.Результат = 0;
			Продолжить;  
		КонецЕсли;
		
		Движение.Показатель = (ВыборкаДетальныеЗаписи.БазаОсн + ВыборкаДетальныеЗаписи.БазаДоп) / ВыборкаДетальныеЗаписи.ОтработаноДней; //средняя дневная ставка 
		Движение.Результат =  Движение.Показатель * Движение.Дней;  //средняя дневная ставка на количество дней отпуска
		
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);
КонецПроцедуры  


Процедура РассчитатьПремию(Отказ)
	
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_ДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ЕСТЬNULL(ВКМ_ВыполненныеСотрудникомРаботыОбороты.СуммаКОплатеОборот, 0) КАК СуммаКОплатеОборот,
		|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.ПроцентОтРабот КАК ПроцентОтРабот,
		|	ВКМ_ДополнительныеНачисления.Сотрудник КАК Сотрудник
		|ИЗ
		|	РегистрРасчета.ВКМ_ДополнительныеНачисления КАК ВКМ_ДополнительныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВКМ_ВыполненныеСотрудникомРаботы.Обороты(&НачалоПериода, &ОкончаниеПериода,,
		|			Сотрудник В
		|			(ВЫБРАТЬ
		|				ВКМ_НачислениеЗарплатыДополнительныеНачисления.Сотрудник
		|			ИЗ
		|				Документ.ВКМ_НачислениеЗарплаты.ДополнительныеНачисления КАК ВКМ_НачислениеЗарплатыДополнительныеНачисления
		|			ГДЕ
		|				ВКМ_НачислениеЗарплатыДополнительныеНачисления.Ссылка = &Ссылка)) КАК ВКМ_ВыполненныеСотрудникомРаботыОбороты
		|		ПО (ВКМ_ДополнительныеНачисления.Сотрудник = ВКМ_ВыполненныеСотрудникомРаботыОбороты.Сотрудник)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&НачалоПериода, Сотрудник В
		|			(ВЫБРАТЬ
		|				ВКМ_ДополнительныеНачисления.Сотрудник
		|			ИЗ
		|				РегистрРасчета.ВКМ_ДополнительныеНачисления КАК ВКМ_ДополнительныеНачисления
		|			ГДЕ
		|				ВКМ_ДополнительныеНачисления.Регистратор = &Ссылка
		|				И ВКМ_ДополнительныеНачисления.ВидРасчета = &ПремияПоПроценту)) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
		|		ПО (ВКМ_ДополнительныеНачисления.Сотрудник = ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник)
		|ГДЕ
		|	ВКМ_ДополнительныеНачисления.Регистратор = &Ссылка
		|	И ВКМ_ДополнительныеНачисления.ВидРасчета = &ПремияПоПроценту";
	

	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("ОкончаниеПериода", КонецМесяца(Дата));

	Запрос.УстановитьПараметр("ПремияПоПроценту", ПланыВидовРасчета.ВКМ_ДополнительныеНачисления.ПремияПроцентом);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	

	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Если ПустаяСтрока(ВыборкаДетальныеЗаписи.ПроцентОтРабот) Тогда
			Отказ = Истина;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрШаблон("Специалисту %1 не установлен процент оплаты от работ!", ВыборкаДетальныеЗаписи.Сотрудник));
			Прервать;
		КонецЕсли;	
		
		Движение = Движения.ВКМ_ДополнительныеНачисления[ВыборкаДетальныеЗаписи.НомерСтроки - 1];
		
		Движение.Размер =  СтроковыеФункцииКлиентСервер.СтрокаВЧисло(ВыборкаДетальныеЗаписи.ПроцентОтРабот); 
		Движение.Результат =  ВыборкаДетальныеЗаписи.СуммаКОплатеОборот;
		
	КонецЦикла;
	
	Движения.ВКМ_ДополнительныеНачисления.Записать(, Истина);
КонецПроцедуры  

#КонецОбласти

#КонецЕсли

